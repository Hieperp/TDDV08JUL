@using TotalPortal.Configuration

<div>
    @(Html.Kendo().Grid<TotalModel.Models.CommodityIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.CommodityID).DisplayNameTitle().Hidden();

            columns.Bound(p => p.Code).Title("Mã HH").Width(10).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Commons/Commodities", action = "Edit" }) + "/#= CommodityID #'>#=Code#</a>");
            columns.Bound(p => p.OfficialName).Title("Tên hàng hóa").Width(300);         

            columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(80)
                .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Commons/Commodities", action = "Edit" }) + "/#= CommodityID #'><span class='k-icon k-edit'></span></a>"); // <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Commons/Commodities", action = "Delete" }) + "/#= CommodityID #'><span class='k-icon k-delete'></span></a>
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text> 
                <button type="button" class="k-button" onclick="location.href='@Url.Action("Create", "Commodities")'"> <img src="~/Content/Images/Mains/Commodity Blue 24.png" /> Thêm hàng hóa mới </button> 
                <div class="toolbar" style="float: right;">
                    <label>Nhập mã, tên hoặc MST hàng hóa để tìm</label>
                    <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                </div>
            </text>);
        })
        .Pageable()
        .Groupable()
        //.Filterable()
        .Selectable()
        .Sortable()
        .Events(e =>
        {
            e.DataBound("hightLightSelectedRow");
        })
        .DataSource(dataSource => dataSource
            .Ajax()            
            .Read(read => read.Action("GetCommodityIndexes", "CommodityAPIs", new { area = "Commons" }))       
            .PageSize(20)
            .Model(model =>
            {
                model.Id(x => x.CommodityID);
                model.Field(m => m.CommodityID).DefaultValue(0);
            })
            .ServerOperation(true)
        )
        .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("CommodityID", '@ViewBag.SelectedEntityID');
        });
    }   


    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if (indexFilterText && indexFilterText.length >= "@Settings.MinLenght2") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "Code", operator: "contains", value: indexFilterText },
                    { field: "Name", operator: "contains", value: indexFilterText }
                    //{ field: "OfficialName", operator: "contains", value: indexFilterText },
                    
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }
</script>



